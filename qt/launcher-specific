#############################
# QT launcher specific part #
#############################

# select qt version
. $SNAP/flavor-select

# Qt Platform to Mir
export QTCHOOSER_NO_GLOBAL_DIR=1
if [ "$USE_qt5" = true ]; then
  # QT_SELECT not exported by ubuntu app platform runtime
  if [ -z "$QT_SELECT" ]; then
    export QT_SELECT=snappy-qt5
  fi
else
  export QT_SELECT=snappy-qt4
fi

# Removes Qt warning: Could not find a location
# of the system Compose files
export QTCOMPOSE=$SNAP/usr/share/X11/locale

# Qt Libs, Modules and helpers
if [ "$USE_qt5" = true ]; then
  export QT_PLUGIN_PATH=$RUNTIME/usr/lib/$ARCH/qt5/plugins
  export QML2_IMPORT_PATH=$RUNTIME/lib/$ARCH:$RUNTIME/usr/lib/$ARCH/qt5/qml:$QML2_IMPORT_PATH
  [ "$USE_RUNTIME" = yes ] && QML2_IMPORT_PATH=$SNAP/lib/$ARCH:$SNAP/usr/lib/$ARCH/qt5/qml:$QML2_IMPORT_PATH
  PATH=$RUNTIME/usr/lib/$ARCH/qt5/bin:$PATH
  if [ "$XDG_SESSION_TYPE" = "x11" ] ; then
    export QT_QPA_PLATFORM=xcb
  else
    export QT_QPA_PLATFORM=ubuntumirclient
  fi
else
  export LD_LIBRARY_PATH=$SNAP/usr/lib/$ARCH/qt4:$LD_LIBRARY_PATH
  export QT_PLUGIN_PATH=$SNAP/usr/lib/$ARCH/qt4/plugins
  export QML_IMPORT_PATH=$SNAP/usr/lib/$ARCH/qt4/qml:$SNAP/lib/$ARCH:$QML_IMPORT_PATH
  PATH=$SNAP/usr/lib/$ARCH/qt4/bin:$PATH
fi

# Necessary for the SDK to find the translations directory
export APP_DIR=$SNAP

# Use GTK styling for running under Unity 7
export GTK_PATH=$RUNTIME/usr/lib/$ARCH/gtk-2.0

# Gdk-pixbuf loaders
export GDK_PIXBUF_MODULE_FILE=$XDG_CACHE_HOME/gdk-pixbuf-loaders.cache
export GDK_PIXBUF_MODULEDIR=$RUNTIME/usr/lib/$ARCH/gdk-pixbuf-2.0/2.10.0/loaders
if [ $needs_update = true ]; then
  rm -f $GDK_PIXBUF_MODULE_FILE
  if [ -f $RUNTIME/usr/lib/$ARCH/gdk-pixbuf-2.0/gdk-pixbuf-query-loaders ]; then
    $RUNTIME/usr/lib/$ARCH/gdk-pixbuf-2.0/gdk-pixbuf-query-loaders > $GDK_PIXBUF_MODULE_FILE
  fi
fi

# Icon themes cache
if [ $needs_update = true ]; then
  rm -rf $XDG_DATA_HOME/icons
  mkdir -p $XDG_DATA_HOME/icons
  for d in "${data_dirs_array[@]}"; do
    for i in $d/icons/*; do
      if [ -d "$i" ]; then
        theme_dir=$XDG_DATA_HOME/icons/$(basename "$i")
        if [ ! -d "$theme_dir" ]; then
          mkdir -p "$theme_dir"
          ln -s $i/* "$theme_dir"
          if [ -f $RUNTIME/usr/sbin/update-icon-caches ]; then
            $RUNTIME/usr/sbin/update-icon-caches "$theme_dir"
          elif [ -f $RUNTIME/usr/sbin/update-icon-cache.gtk2 ]; then
            $RUNTIME/usr/sbin/update-icon-cache.gtk2 "$theme_dir"
          fi
        fi
      fi
    done
  done
fi

exec "$@"
